@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}
@keyframes fadeAndScaleIn {
    from {
        opacity: 0;
        transform: scale(0.5);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}
@keyframes fadeAndScaleOut {
    from {
        opacity: 1;
        transform: scale(1);
    }
    to {
        opacity: 0;
        transform: scale(0.5);
    }
}
@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
}
@keyframes slideup {
    from {
        opacity: 0;
        transform: translate3d(0, 2rem, 0);
    }
    to {
        opacity: 1;
        transform: translate3d(0, 0, 0);
    }
}
@keyframes slidedown {
    from {
        opacity: 0;
        transform: translate3d(0, -2rem, 0);
    }
    to {
        opacity: 1;
        transform: translate3d(0, 0, 0);
    }
}
@keyframes slideInFromRight {
    from {
        opacity: 0;
        transform: translate3d(2rem, 0, 0);
    }
    to {
        opacity: 1;
        transform: translate3d(0, 0, 0);
    }
}
@keyframes slideInFromLeft {
    from {
        opacity: 0;
        transform: translate3d(-2rem, 0, 0);
    }
    to {
        opacity: 1;
        transform: translate3d(0, 0, 0);
    }
}
@keyframes showSubMenu {
    from {
        opacity: 0;
        transform: scale(0);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}
@keyframes hideSubMenu {
    from {
        opacity: 1;
        transform: scale(1);
    }
    to {
        opacity: 0;
        transform: scale(0);
    }
}
@keyframes invalid-input {
    16.65% {
      -webkit-transform: translateX(8px);
      transform: translateX(8px);
    }
    33.3% {
      -webkit-transform: translateX(-6px);
      transform: translateX(-6px);
      border-color: var(--light-caution);
    }
    49.95% {
      -webkit-transform: translateX(4px);
      transform: translateX(4px);
      border-color: var(--light-caution);
    }
    66.6% {
      -webkit-transform: translateX(-2px);
      transform: translateX(-2px);
      border-color: var(--light-caution);
    }
    83.25% {
      -webkit-transform: translateX(1px);
      transform: translateX(1px);
    }
    100% {
      -webkit-transform: translateX(0);
      transform: translateX(0);
    }
}
@keyframes pulse {
    0% {
        transform: scale(0.6);
    }
    50% {
        transform: scale(1.2);
    }
    100% {
        transform: scale(1);
    }
}
@keyframes shrinkAllTheWayDown {
    from {
        opacity: 1;
        transform: scale(1);
    }
    to {
        opacity: 0;
        transform: scale(0);
    }
}
@keyframes check {
    100% {
        stroke-dashoffset: 0;
    }
}
@keyframes checkmark-shrink {
    100% {
        opacity: 0;
        transform: rotate(45deg) scale(0);
    }
}
.shrinkit {
    animation: 0.2s shrinkdown 1;
}
#demo {
    position: fixed;
    bottom: 1rem;
    right: 1rem;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 50%;
    border: 1px solid var(--element-main-border);
    background: var(--element-main-bg);
    cursor: pointer;
    z-index: 999999999999999999999999999999999999999;
}
* {
    box-sizing: border-box;
}
:root {
    --default-font: 'Work Sans', sans-serif;
    --display-font: 'Abril Fatface', cursive;
    --button-font: 'Work Sans', sans-serif;
    --deep-gradient: linear-gradient(135deg, #197c77, #55a047);
    --dark-gradient: linear-gradient(135deg, #43a8a3, #75c964);
    --med-gradient: linear-gradient(135deg, #5ebbb6, #99da8c);
    --light-gradient: linear-gradient(135deg, #bbf5f2, #cdf3c7);
    --deep-theme-color: #238f8a;
    --med-theme-color: #58bbb6;
    --light-theme-color: #a2e0dd;
    --lighter-theme-color: #c9eceb;
    --lightest-theme-color: #d8f7f5;
    --caution: #c55a63;
    --light-caution: #dd858c;
    --light-green: #cdf3c7;
    --text-main: #000;
    --text-dimmed: #666;
    --element-main-bg: #fff;
    --element-dimmed-bg: #f7f7f7;
    --element-main-border: #ccc;
    --element-secondary-border: #ddd;
}
:root[data-mode='dark'] {
    --text-main: #ddd;
    --text-dimmed: #ccc;
    --element-main-bg: #222;
    --element-dimmed-bg: #1a1a1a;
    --element-main-border: #333;
    --element-secondary-border: #444;
    --med-theme-color: #111;
    --light-theme-color: #58bbb6;
    --lighter-theme-color: #a2e0dd;
    --lightest-theme-color: #c9eceb;
}
:root[data-mode='mini'] {
    --default-font: 'Lato', sans-serif;
    /* --deep-gradient: linear-gradient(135deg, #294c69, #296951); */
    --deep-theme-color: #296951;
    --sidebar-bg: #222;
    --element-offwhite-bg: #FEF6F3;
    --element-dimmed-bg: transparent;
}
html, body {
    width: 100%;
    height: 100%;
    margin: 0;
    font-family: var(--default-font);
    font-size: 16px;
    color: var(--text-main);
    font-weight: 300;
    overflow: hidden;
}
html[data-mode='mini']::before {
    content: '';
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url('https://www.muralswallpaper.com/app/uploads/albert-kuip-grey-chair-swatch.jpg');
    background-size: cover;
    opacity: 0.2;
    filter: hue-rotate(-80deg);
}
b, strong {
    font-weight: 600;
}
a, a:visited {
    color: var(--deep-theme-color);
    font-weight: 600;
    text-decoration: none;
    position: relative;
}
a::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 0.5rem;
    background: var(--light-gradient);
    opacity: 0.7;
    transition: transform 0.2s;
    transform: scaleX(0);
    transform-origin: bottom right;
    z-index: -1;
}
a:hover::after {
    transform: scaleX(1);
    transform-origin: bottom left;
}
p {
    margin-top: 0;
}
h1, h2, h3, h4, h5, h6 {
    margin-top: 0;
}
h1 {
    font-weight: normal;
}
h2 {
    font-weight: 500;
}
button, select, textarea, input {
    font-family: inherit;
    outline: none;
}
input:not([type=submit]) {
    font-size: inherit;
    font-weight: inherit;
}
[data-ghost='true'] {
    visibility: hidden;
}
button, input[type=submit] {
    cursor: pointer;
    border: 0;
    background: var(--med-gradient);
    color: #fff;
    font-weight: normal;
    padding: 1rem 1.5rem;
    border-radius: 0.5rem;
    display: block;
    margin-top: 1.5rem;
    font-size: 0.83rem;
}
button.stealth, .Nav nav button, .MiniMenu button, .Dropdown button {
    margin: 0;
    padding: 0;
    border: 0;
    background: 0;
}
button:disabled {
    background: #aaa;
    cursor: not-allowed;
}
button.greyed {
    background: #aaa;
}
button.caution {
    background: var(--caution);
}
button.round-basic {
    margin: 0;
    padding: 0;
    background: 0;
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 999px;
    font-size: 1.4rem;
    display: grid;
    place-items: center;
    color: #666;
    transition: 0.2s;
}
button.round-basic:hover {
    background: rgba(0, 0, 0, 0.1);
    color: #333;
}
button.icon::before {
    font: 900 1em 'Font Awesome 5 Free';
}
button.bar-menu::before {
    content: '\f0c9';
}
button.ellipsis::before {
    content: '\f142'
}
.buttons {
    text-align: center;
    margin-top: 1.5rem;
}
.buttons button {
    display: inline-block;
    margin: 0;
}
.buttons button + button {
    margin-left: 1rem;
}
.buttons.smaller button, button.smaller {
    padding: 0.7rem 1rem;
}

button {
    position: relative;
}
button.poof {
    animation: 0.3s shrinkAllTheWayDown 1 forwards;
}
button .Loading, button .SuccessAnimation {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate3d(-50%, -50%, 0);
}
button .SuccessAnimation {
    margin-top: 2px;
    margin-left: -0.2rem;
}
button .SuccessAnimation svg {
    fill: none;
    stroke: #fff;
    stroke-width: 2px;
    stroke-dasharray: 2rem;
    stroke-dashoffset: 2rem;
    height: 1.5rem;
    transform-origin: center right;
    animation: 0.7s check 1 forwards, 0.5s checkmark-shrink 1 forwards 1s;
    transform: rotate(45deg) scale(1);
}
button .Loading svg {
    height: 70%;
}
button .Loading svg * {
    fill: #fff;
}

.nowrap {
    display: inline-block;
}
.nowrap::after {
    content: '';
    padding-left: 0.5ch;
}
.Home {
    padding: 5vw;
}
.Home h1, h1.display {
    font-family: var(--display-font);
    font-size: 5rem;
    font-weight: normal;
    margin-bottom: 1rem;
}
.Home button {
    background: var(--dark-gradient);
}
#root, .App {
    width: 100%;
    height: 100%;
}
.Dashboard {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-rows: auto;
    grid-template-columns: 250px 1fr;
    grid-template-areas: 'sidebar main';
    overflow: hidden;
}
.Dashboard .Sidebar {
    grid-area: sidebar;
    background: var(--sidebar-bg);
    padding: 1.5rem;
    height: 100%;
    overflow: auto;
}
.Dashboard .Panel {
    background: var(--element-main-bg);
    grid-area: main;
    padding: 2rem;
    padding-right: 35%;
    height: 100%;
    overflow: auto;
}
.Dashboard .Main {
    grid-area: main;
    height: 100%;
    overflow: hidden;
}
.Main h1 {
    font-family: var(--display-font);
    font-size: 10vh;
    margin: 0;
    line-height: 1;
}
.Main .List {
    padding: 4rem 5rem 5rem;
    width: 100%;
    min-width: 400px;
    height: 100%;
}
.Main .Editor {
    padding: 5rem;
    width: 100%;
    height: 100%;
    position: relative;
}
.Main[data-editor='true'] .List {
    display: none;
}
.slideUpIn {
    animation: slideup 0.2s 1; 
}
.Main.slide .List {
    animation: slideInFromLeft 0.2s 1;
}
 /* .Main[data-editor='false'] .List {
   animation: slideInFromLeft 0.2s 1; // todo figure out how to put this back
} */

.List {
    display: grid;
    grid-template-rows: auto 1fr;
    row-gap: 2rem;
    overflow: hidden;
}
.ListHeader.grid {
    width: 400px;
    display: grid;
    grid-template-rows: 1fr auto;
    grid-template-columns: 1fr auto;
    grid-template-areas:
        'dragonfly dragonfly'
        'header button';
    column-gap: 0.5rem;
}
.ListHeader h1 {
    margin-bottom: 1.5rem;
}
.ListHeader h2 {
    grid-area: header;
    font-size: 2rem;
    font-weight: 300;
    margin: 0;
}
.ListHeader button.createNew {
    margin: 0;
    margin-top: 1rem;
    padding: 0;
    width: 2.5rem;
    height: 2.5rem;
    font-size: 1.4rem;
    display: grid;
    place-items: center;
    border-radius: 999px;
    position: relative;
}
.ListHeader button.createNew::before {
    content: '\f067';
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
}
button.createNew .tooltip {
    position: absolute;
    top: 50%;
    left: 100%;
    margin-left: 0.75rem;
    white-space: nowrap;
    transform: translate3d(0, -50%, 0);
    background: #333;
    font-size: 0.7rem;
    line-height: 2rem;
    color: #fff;
    padding: 0 0.75rem;
    border-radius: 0.5rem;
    display: none;
}
button.createNew .tooltip::before {
    position: absolute;
    top: 50%;
    left: 0;
    margin-left: -0.25rem;
    transform: translate3d(0, -50%, 0) rotate(45deg);
    content: '';
    display: block;
    width: 0.5rem;
    height: 0.5rem;
    background: #333;
}
button.createNew:hover .tooltip {
    display: block;
}
.ListHeader span.collectionHeader {
    grid-area: header;
}
.ListHeader span.collectionHeader > span {
    display: block;
}
.ListHeader span.collectionHeader > span:first-of-type {
    font-size: 0.7rem;
    margin-bottom: 0.1rem;
    font-weight: 400;
}
.ListHeader span.collectionHeader > span + span {
    font-size: 1.5rem;
}
.ListContent {
    overflow: auto;
    /* animation: 0.2s slideup 1; // todo */
}
.ListContent::-webkit-scrollbar {
	width: 0.5rem;
	height: 0;
	background-color: inherit;
}
.ListContent::-webkit-scrollbar-track {
	background-color: inherit;
}
.ListContent::-webkit-scrollbar-thumb {
	background-color: rgba(0, 0, 0, 0.2);
}
.ListItem {
    width: 400px;
    border-left: 2px solid #C6CBC9;
    transition: 0.2s;
}
.ListItem.grid {
    display: grid;
    align-items: center;
    grid-template: auto auto / 1fr auto;
    grid-template-areas:
        'content button'
        'content button';
}
.ListItem > div:first-of-type {
    padding-bottom: 1rem;
    padding-left: 2rem;
}
.ListHeaderButton,
.ListItem > div.previewButton {
    grid-area: button;
    position: relative;
}
.ListHeaderButton .MiniMenu,
.ListItem > div.previewButton .MiniMenu {
    right: calc(100% + 0.5rem);
    top: 0;
    z-index: 200;
}
.ListItem:only-of-type > div:first-of-type {
    padding: 1rem 0 1rem 2rem;
}
.ListItem + .ListItem > div:first-of-type {
    padding-top: 1rem;
}
.ListItem:hover {
    cursor: pointer;
    border-left-color: #666;
}
.ListItem h2 {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: 0.5rem;
    font-size: 1rem;
    text-transform: uppercase;
    margin-bottom: 0.5rem;
}
.ListItem span.meta {
    display: block;
    font-size: 0.8rem;
    margin-top: 0.5rem;
    opacity: 0.7;
}
.NoteOperations .OptionItem.hasStar > button {
    color: #2f9e72;
}
.NoteOperations .OptionItem.pulse button {
    animation: 0.5s pulse 1;
}
.ListItem .hasStar {
    color: #52d19e;
    font-size: 0.8rem;
}
.ListFooter {
    padding: 2rem 0 1rem;
    font-weight: 300;
    font-size: 1.5rem;
    color: #444;
}
.nonotes {
    color: #999;
}
.Editor .noteInfo {
    padding-right: 3rem;
    border-right: 1px solid #aaa;
    margin-right: 3rem;
    text-align: right;
}
.Editor .noteInfo h3 {
    font-size: 0.8rem;
    text-transform: uppercase;
    margin-bottom: 0.2rem;
}
.Editor .noteInfo .group + .group {
    margin-top: 1rem;
}
button.giantCornerButton {
    position: fixed;
    top: 2.5rem;
    right: 3rem;
    color: #ccc;
    font-size: 2.5rem;
    transition: 0.2s;
    background: 0;
    border: 0;
    padding: 0;
    margin: 0;
    animation: slideInFromRight 0.2s 1;
}
button.giantCornerButton::before {
    font: 900 1em 'Font Awesome 5 Free';
}
button.giantCornerButton:hover {
    color: #aaa;
}
button.giantCornerButton.exit::before {
    content: '\f00d';
}
button.giantCornerButton.back::before {
    content: '\f060';
}
.EditorToolbar {
    display: flex;
    flex-wrap: wrap;
    place-items: center;
    margin-bottom: 2rem;
}
.EditorToolbar hr {
    margin: auto 1.5rem;
    background: #ddd;
    border: 0;
    width: 0.3rem;
    height: 0.3rem;
    border-radius: 999px;
}
.EditorToolbar .group {
    display: flex;
}
.EditorToolbar button {
    background: 0;
    border: 0;
    padding: 0;
    margin: 0;
    width: 1.5rem;
    height: 1.5rem;
    color: #666;
    display: grid;
    place-items: center;
}
.EditorToolbar button.active {
    background: #ddd;
    border-radius: 0.2rem;
}
.EditorToolbar button + button {
    margin-left: 0.5rem;
}
.Editable {
    width: 100%;
}
.Editor .saveChanges {
    text-align: right;
    padding-right: 3rem;
    animation: slideup 0.2s 1;
}
.Editor .saveChanges button {
    background: var(--deep-gradient);
    display: inline-block;
}
.NoteOperations {
    position: fixed;
    bottom: 14rem;
    right: 3rem;
}
.NoteOperations::after {
    content: '';
    display: block;
    position: absolute;
    top: 100%;
    left: 50%;
    margin-top: 3rem;
    margin-left: -0.5px;
    width: 1px;
    height: 8rem;
    background: #666;
}
.Main[data-editor='true'] .NoteOperations {
    animation: slideup 0.2s 1;
}
.NoteOperations .OptionItem {
    text-align: center;
    position: relative;
}
.NoteOperations > .OptionItem + .OptionItem {
    margin-top: 1.5rem;
}
.NoteOperations .OptionItem > button {
    background: 0;
    border: 0;
    padding: 0;
    margin: 0;
    font-size: 1.2rem;
    color: #222;
    display: inline-block;
}
.NoteOperations .OptionItem .Tooltip {
    position: absolute;
    bottom: 50%;
    right: 100%;
    margin-right: 0.75rem;
    white-space: nowrap;
    margin-bottom: -1rem;
    background: #222;
    font-size: 0.7rem;
    line-height: 2rem;
    font-weight: 400;
    color: #fff;
    padding: 0 1rem;
    border-radius: 0.5rem;
    display: none;
    max-height: 2rem;
    transition: 0.2s;
    overflow: hidden;
}
.NoteOperations .OptionItem .tooltipArrow {
    position: absolute;
    top: 50%;
    right: 100%;
    margin-right: 0.5rem;
    transform: translate3d(0, -50%, 0) rotate(45deg);
    display: none;
    width: 0.5rem;
    height: 0.5rem;
    background: #222;
    transition: opacity 0.2s;
}
.NoteOperations .OptionItem:hover .Tooltip,
.NoteOperations .OptionItem:hover .tooltipArrow,
.NoteOperations .OptionItem .Tooltip.open,
.NoteOperations .OptionItem .Tooltip.open + .tooltipArrow {
    display: inline-block;
}
.NoteOperations .OptionItem .Tooltip.open {
    display: inline-block;
    overflow: auto;
    padding: 1rem;
    box-sizing: content-box;
    line-height: 1.2;
}
.NoteOperations .OptionItem .Tooltip.open .Dropdown {
    animation: fadeAndScaleIn 0.2s 1;
    transform-origin: top center;
}
.NoteOperations .OptionItem .Tooltip.open.hasDropdown {
    overflow: visible;
}
.NoteOperations .OptionItem .Tooltip.open.closing {
    max-height: 0;
    overflow: hidden;
    padding: 0;
}
.NoteOperations .OptionItem .Tooltip.open.closing > div:first-of-type {
    animation: fadeAndScaleOut 0.2s 1;
}
.NoteOperations .OptionItem .Tooltip.open.closing + .tooltipArrow {
    opacity: 0;
}
.NoteOperations .OptionItem button::before {
    font: 900 1em 'Font Awesome 5 Free';
}
.NoteOperations .OptionItem button.star::before {
    content: '\f005';
}
.NoteOperations .OptionItem button.collection::before {
    content: '\f02d';
}
.NoteOperations .OptionItem button.tags::before {
    content: '\f02c';
}
.NoteOperations .OptionItem button.trash::before {
    content: '\f1f8';
}
.Tooltip.open strong {
    display: block;
    text-transform: uppercase;
    margin-bottom: 1rem;
}
.Tooltip.open .Dropdown {
    width: 100%;
    color: #333;
}
.noteIsInTrash {
    margin-bottom: 2.5rem;
}
.noteIsInTrash .giantIcon {
    display: block;
    font-size: 1.5rem;
    margin-bottom: 1rem;
    margin-left: 0.5rem;
    color: #333;
}
.noteIsInTrash .buttons {
    text-align: left;
}
.SortByTag {
    margin-top: 1rem;
}
.SortByTag h2 {
    margin: 1rem 0;
}
.SortByTag .TagList {
    margin: 1.5rem 0;
}
.SortTagOptions {
    margin-top: 1rem;
    font-size: 0.9rem;
}
.SortTagOptions .Dropdown {
    width: 4rem;
    margin: 0 0.5rem;
}

/* TAG LIST */
.TagList {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
}
.Tooltip .TagList {
    width: 300px;
    margin-bottom: 0.2rem;
}
.Tooltip .Tag {
    flex: 1 0 auto;
}
.Tooltip .Tag > button {
    width: 100%;
}

/* TAG BUTTONS */
.Tag {
    position: relative;
}
.Tag > button {
    margin: 0;
    border: 0;
    background: #323741;
    padding: 0 1rem;
    font-size: 0.7rem;
    color: #fff;
    line-height: 1.5rem;
    text-align: center;
    text-transform: uppercase;
    width: auto;
    border-radius: 999px;
    border-top-left-radius: 0;
    transition: 0.2s;
}
.Tag > button:hover {
    background: #5a6172;
}
.Tag > button::before {
    content: '\f067';
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    line-height: inherit;
    margin-right: 0.3rem;
    font-size: 0.8em;
    color: inherit;
    display: inline-block;
    float: none;
    transition: transform 0.2s;
}
.Tag.selected > button {
    background: var(--deep-theme-color);
}
.Tag.selected > button::before {
    transform: rotate(45deg);
}
.Tag > button.createTag {
    background: var(--med-gradient);
    border-width: 0;
    line-height: calc(1.2rem + 2px);
    color: #fff;
}
.Tag > button.createTag:hover {
    color: #fff;
}
.Tag > .MiniMenu {
    top: calc(100% + 0.2rem);
    left: 0;
    z-index: 200;
    box-shadow: 0.2rem 0.2rem 0.5rem rgba(0, 0, 0, 0.3);
    background: #464b58;
    transform-origin: top left;
}
.Tag > .MiniMenu button {
    color: #c1c7d4;
}
.Tag > .MiniMenu button:hover {
    background: #323741;
}

/* DROPDOWN */
.Dropdown {
    position: relative;
    display: inline-block;
    text-align: left;
    z-index: 0; /* todo test more */
}
.dropdownDisplay {
    border: 1px solid #ddd;
    border-radius: 0.5rem;
    display: inline-block;
    padding: 0.3rem 0.6rem;
    padding-right: 3rem;
    transition: 0.2s;
    position: relative;
    z-index: 200;
    background: #fff;
    width: 100%;
}
.dropdownDisplay::after {
    font: 900 1em 'Font Awesome 5 Free';
    content: '\f0d9';
    position: absolute;
    top: 50%;
    right: 0.7rem;
    transform: translate3d(0, -50%, 0);
    transition: 0.2s;
}
.Dropdown.expanded .dropdownDisplay {
    border-radius: 0.5rem 0.5rem 0 0;
}
.Dropdown.expanded .dropdownDisplay::after {
    transform: translate3d(0, -50%, 0) rotate(-90deg);
}
.dropdownDisplay, .dropdownList button {
    color: #333;
    font-weight: 400;
    font-size: 0.8rem;
    cursor: pointer;
    line-height: 1.5;
}
.dropdownList, .dropdownList li {
    list-style: none;
    margin: 0;
    padding: 0;
}
.dropdownList {
    background: #fff;
    transition: 0.2s;
    overflow: hidden;
    position: absolute;
    z-index: 150;
    top: calc(100% - 0.5rem);
    left: 0;
    width: 100%;
    border-radius: 0 0 0.5rem 0.5rem;
    border: 1px solid #ddd;
    border-top: 0;
}
.Dropdown.expanded .dropdownList {
    margin-top: 0.5rem;
}
.dropdownList li + li {
    border-top: 1px solid #ddd;
}
.dropdownList button {
    background: #fff;
    padding: 0.3rem 0.6rem;
    margin: 0;
    display: block;
    width: 100%;
    text-align: left;
    border-radius: 0;
}
.dropdownList button:hover {
    background: #f7f7f7;
}
.addNew.active {
    cursor: default;
    position: relative;
}
.addNew.active:hover {
    background: #fff;
}
.addNew input {
    border: 0;
    padding: 0;
    line-height: 1.5;
    margin-top: 0.2rem;
    width: 100%;
    height: auto;
}
.addNew .inputHint {
    top: 100%;
    left: 0;
    width: 100%;
    font-size: 0.7rem;
    font-weight: 500;
    color: #666;
    line-height: normal;
    display: block;
    margin: 0.2rem 0;
    white-space: normal;
}


/* OLD DROPDOWN */
/* .Dropdown {
    position: relative;
    display: inline-block;
}
.Dropdown, .Dropdown * {
    user-select: none;
    font-weight: 400;
}
.Dropdown li {
    list-style: none;
    margin: 0;
    padding: 0;
}
.Dropdown button, .Tooltip.open .Dropdown button {
    font-size: 0.8rem;
    padding: calc(0.5rem + 1.5px) 0.5rem;
    width: 100%;
    text-align: left;
    transition: color 0.2s;
}
.Dropdown .dropdownDisplay {
    font-size: 0.8rem;
    line-height: 1.1rem;
    background: var(--element-main-bg);
    border: 1px solid var(--element-secondary-border);
    padding: 0.5rem;
    border-radius: 0.5rem;
    cursor: pointer;
    text-align: left;
    position: relative;
}
.Dropdown .dropdownDisplay::after {
    content: '\f0d9';
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    display: block;
    transition: transform 0.2s;
    position: absolute;
    top: 0;
    right: 0.6rem;
    line-height: 1.1rem;
    padding: 0.5rem 0;
}
.Dropdown.expanded .dropdownDisplay::after {
    transform: rotate(-90deg);
}
.Dropdown .dropdownDisplay {
    position: relative;
    z-index: 2;
}
.Dropdown .dropdownList {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.2s;
    position: absolute;
    z-index: 1;
    top: 50%;
    left: 0;
    width: 100%;
    border: 1px solid var(--element-secondary-border);
    border-top: 0;
    background: var(--element-main-bg);
    border-radius: 0 0 0.5rem 0.5rem;
    padding-top: calc(1rem + 1px);
}
.Dropdown.expanded .dropdownDisplay {
    border-radius: 0.5rem 0.5rem 0 0;
}
.Dropdown.expanded:not(.noscroll) .dropdownList {
    overflow: scroll;
    scrollbar-color: #333;
    scrollbar-width: thin;
}
.Dropdown.expanded:not(.noscroll) .dropdownList::-webkit-scrollbar {
	width: 0.3rem;
	height: 0;
	background-color: inherit;
}
.Dropdown.expanded:not(.noscroll) .dropdownList::-webkit-scrollbar-track {
	background-color: transparent;
}
.Dropdown.expanded:not(.noscroll) .dropdownList::-webkit-scrollbar-thumb {
    background-color: #666;
}
.sortByTag .Dropdown {
    width: 4rem;
    margin: 0 0.3rem;
}
.sortByTag .Dropdown .dropdownDisplay {
    padding: 0.3rem 0.6rem;
}
.sortByTag .Dropdown .dropdownDisplay::after {
    padding: 0.3rem 0;
}
.sortByTag .Dropdown button {
    padding: 0.3rem 0.6rem;
}
.sortByTag .Dropdown .dropdownList {
    padding-top: calc(0.8rem + 1px);
} */

button.hasCollection {
    position: relative;
}
button.hasCollection::before {
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    position: absolute;
    top: 50%;
    right: 0.6rem;
    transform: translate3d(0, -50%, 0);
}
button.hasCollection::before {
    content: '\f00c';
}
button.hasCollection:hover::before {
    content: '\f00d';
}



.Dashboard .OldNotes {
    grid-area: main;
    display: grid;
    grid-template-columns: 350px 1fr auto;
    grid-template-areas: 'list editor options';
}
@media screen and (max-width: 900px) {
    .Dashboard {
        display: block;
        height: 100%;
    }
    .Dashboard .Panel {
        padding: 1.5rem;
        padding-bottom: 6.5rem;
    }
    .Dashboard .OldNotes {
        grid-template-rows: 100%;
        grid-template-columns: 100%;
        grid-template-areas: 'list';
        height: 100%;
    }
    .Dashboard .OldNotes[data-editor=true] {
        grid-template-areas: 'editor';
    }
}
.OldNotes .List {
    grid-area: list;
    border-right: 1px solid var(--element-main-border);
    background: var(--element-dimmed-bg);
}
.OldNotes .Editor {
    grid-area: editor;
    padding: 2rem;
}
.OldNotes .Options {
    grid-area: options;
    padding: 1rem;
    border-left: 1px solid var(--element-main-border);
    text-align: center;
}
@media screen and (max-width: 900px) {
    .OldNotes .List {
        border-right: 0;
    }
    .OldNotes .Editor {
        padding: 0;
    }
}
.Sidebar h1 {
    font-family: var(--display-font);
    font-size: 2.5rem;
    color: #fff;
    font-weight: normal;
    margin-left: 0.5rem;
    margin-bottom: 1rem;
    text-shadow: 2px 2px 0.5rem var(--deep-theme-color);
}
.Nav hr {
    margin: 2rem auto;
    border: 0;
    padding: 0;
    height: 1px;
    background: #333;
    width: 90%;
}
.Nav nav ul {
    margin: 0;
    padding: 0;
    list-style: none;
}
.Nav nav ul li {
    margin: 1.5rem 0;
}
.Nav nav button {
    font-weight: normal;
    margin: 0 0.5rem;
    display: grid;
    grid-template-columns: 2rem 1fr;
    align-items: center;
    color: #ccc;
}
.Nav nav button::before {
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    font-size: 1.2rem;
    grid-column: 1 / 2;
    margin-right: 0.5rem;
    transition: 0.2s;
}
.Nav nav button:hover::before {
    transform: scale(1.2);
    text-shadow: 0 0 0.5rem #fff;
}
.Nav nav ul.subList {
    max-height: 0;
    transition: max-height 0.2s;
    transform-origin: top left;
    overflow: hidden;
    margin-left: 2.5rem;
}
.Nav nav ul.subList li {
    margin: 0;
}
.Nav nav ul.subList li:first-of-type {
    padding-top: 1rem;
}
.Nav nav ul.subList button {
    font-size: 0.7rem;
    color: var(--lighter-theme-color);
    font-weight: 500;
    text-transform: uppercase;
    margin: 0.5rem 0;
    padding: 0.2rem 0;
    transition: color 0.2s;
    display: block;
}
.Nav nav ul.subList button:hover {
    color: #fff;
}
.Menu {
    background: transparent;
}
.Menu button.menuButton {
    position: fixed;
    z-index: 999;
    bottom: 1.5rem;
    right: 1.5rem;
    font-size: 1.7rem;
    width: 3.5rem;
    height: 3.5rem;
    border-radius: 999px;
    background: var(--med-gradient);
    margin: 0;
    padding: 0;
    display: grid;
    place-items: center;
    box-shadow: 0.2rem 0.2rem 1rem rgba(0, 0, 0, 0.2);
}
.Menu button.menuButton::before {
    content: '\f0c9';
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
}
.Menu[data-expanded=true] button.menuButton {
    display: none;
}
.MainMenu {
    position: fixed;
    z-index: 9999;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--deep-theme-color);
    transition: 0.2s ease-in-out;
    transform: translate(0, 0, 0);
}
.MainMenu.mounting {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
}
.MainMenu button.exit {
    position: fixed;
    top: 1.5rem;
    right: 1.5rem;
    font-size: 1.5rem;
    color: #fff;
}
.MainMenu button.exit::before {
    content: '\f00d';
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
}
.MainMenu .Nav {
    padding: 1rem 1.5rem 1.5rem;
    height: 100%;
    overflow: auto;
}
.Nav button.all-notes::before {
    content: '\f01c';
}
.Nav button.starred-notes::before {
    content: '\f005';
}
.Nav button.collections::before {
    content: '\f02d';
}
.Nav button.tags::before {
    content: '\f02c';
}
.Nav button.trash::before {
    content: '\f2ed';
}
.Nav button.my-account::before {
    content: '\f007';
}
.Nav button.settings::before {
    content: '\f013';
}
.Nav button.help::before {
    content: '\f059';
}
.Nav button.logout::before {
    content: '\f2f5';
}
.Options {
    position: fixed;
    right: 3rem;
    bottom: 12rem;
}
.Options .OptionItem > button {
    background: none;
    font-size: 1.2rem;
    color: #aaa;
    padding: 0;
    margin: 0 auto;
    position: relative;
}
.Options .OptionItem + .OptionItem {
    margin-top: 1rem;
}
.Options .OptionItem > button .Tooltip {
    position: absolute;
    top: 50%;
    right: 100%;
    margin-right: 0.75rem;
    white-space: nowrap;
    transform: translate3d(0, -50%, 0);
    background: #333;
    font-size: 0.7rem;
    line-height: 2rem;
    color: #fff;
    padding: 0 0.75rem;
    border-radius: 0.5rem;
    display: none;
}
.Options .OptionItem > button .Tooltip::before {
    position: absolute;
    top: 50%;
    left: 100%;
    margin-left: -0.25rem;
    transform: translate3d(0, -50%, 0) rotate(45deg);
    content: '';
    display: block;
    width: 0.5rem;
    height: 0.5rem;
    background: #333;
}
.Options .OptionItem > button:hover .Tooltip {
    display: block;
}
.NoteEditor {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-rows: auto auto 1fr;
    animation: slidedown 0.2s 1;
}
.NoteEditor input[type=text] {
    margin-bottom: 1rem;
    padding: 0;
    border: 0;
    background: 0;
    font-size: 1.5rem;
    font-weight: 500;
}
.DraftEditor-root {
    z-index: 0;
}
@media screen and (max-width: 900px) {
    .NoteEditor input[type=text] {
        margin: 0 1.5rem;
    }
    .NoteEditor .Editable {
        padding: 1.5rem 1.5rem 6.5rem;
    }
    .NoteEditor button.saveChanges {
        margin: 1rem;
    }
}
.EditorControls {
    background: var(--element-dimmed-bg);
    padding: 1rem;
    border-radius: 0.5rem;
    display: flex;
    flex-wrap: wrap;
    place-items: center;
    margin-bottom: 2rem;
}
.EditorControls hr {
    width: 1px;
    height: 1.5rem;
    background: var(--element-secondary-border);
    border: 0;
    margin: 0 1.5rem;
}
.EditorControls button {
    width: 1.5rem;
    height: 1.5rem;
    background: 0;
    border: 0;
    padding: 0;
    margin: 0;
    color: #666;
    display: grid;
    place-items: center;
}
.EditorControls button.active {
    background: #ddd;
    border-radius: 0.2rem;
}
.EditorControls button + button {
    margin-left: 0.5rem;
}

@media screen and (max-width: 900px) {
    .OldNotes .List {
        height: 100%;
        overflow: auto;
    }
    .List .Header {
        background: var(--element-dimmed-bg);
        border-bottom-color: transparent;
        height: auto;
        margin-top: 1.5rem;
        padding: 0.5rem 1.5rem;
    }
    .List .Header h1 {
        font-weight: 300;
        font-size: 1.7rem;
    }
    .List .Header.allNotes {
        display: block;
        margin-bottom: 0.5rem;
    }
    .List .Header.allNotes button {
        margin-top: 1rem;
    }
    .List .NotePreviews {
        height: auto;
    }
}
.NotePreview {
    cursor: pointer;
    padding: 1rem;
    margin: 1rem;
    border-radius: 1rem;
    background: var(--element-main-bg);
    transition: 0.2s;
    position: relative;
}
.NotePreview .hasStar {
    position: absolute;
    top: 0.7rem;
    right: 0.7rem;
    font-size: 0.9rem;
}
.NotePreview.current, .NotePreview.temp {
    transform: translate3d(0, -0.2rem, 0);
    box-shadow: 0.2rem 0.2rem 1.5rem #ddd;
}
.NotePreview.temp {
    animation: 0.4s fadeIn 1;
}
.NotePreview h2 {
    font-size: 1.2rem;
    margin-bottom: 0.5rem;
    padding-right: 2rem;
}
.NotePreview span.excerpt {
    font-size: 0.9rem;
}
.NotePreview span.meta {
    display: block;
    margin-top: 0.5rem;
    font-size: 0.7rem;
    color: #666;
}
.Editable blockquote {
    margin: 0;
    margin-top: 1rem;
    border-left: 0.2rem solid #ddd;
    padding: 0 1rem;
    font-style: oblique;
    font-size: 0.9rem;
    color: #666;
}
.Editable blockquote + div {
    margin-top: 1rem;
}
.Editable blockquote + blockquote {
    margin-top: 0;
}
.Editable .align-left, .Editable .align-left * {
    text-align: left;
}
.Editable .align-center, .Editable .align-center * {
    text-align: center;
}
.Editable .align-right, .Editable .align-right * {
    text-align: right;
}
.Editable .align-justify, .Editable .align-justify * {
    text-align: justify;
}

.MiniMenu {
    position: absolute;
    background: #323741;
    padding: 0.4rem;
    border-radius: 0.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.3rem;
    animation: 0.2s fadeAndScaleIn 1;
    transform-origin: top right;
    cursor: default;
}
.MiniMenu.goodbye {
    animation: 0.2s fadeAndScaleOut 1;
}
.MiniMenu button {
    background: 0;
    border: 0;
    margin: 0;
    padding: 0.4rem 0.6rem;
    padding-right: 2rem;
    border-radius: 0.5rem;
    color: #939aaa;
    white-space: nowrap;
    transition: 0.2s;
    text-align: left;
}
.MiniMenu button:hover {
    background: #171a1f;
    color: #fff;
}

.ContextMenu {
    z-index: 999;
    position: fixed;
}
.ContextMenu ul {
    position: fixed;
    background: var(--element-main-bg);
    border: 1px solid var(--element-secondary-border);
    border-radius: 0.5rem;
    list-style: none;
    margin: 0;
    padding: 0 0.3rem;
}
.ContextMenu button {
    width: 100%;
    text-align: left;
    background: 0;
    border: 0;
    margin: 0;
    padding: 0.5rem 0.7rem;
    color: #666;
    transition: 0.2s;
}
.ContextMenu button:hover {
    color: #aaa;
}
.ContextMenu li + li {
    border-top: 1px solid var(--element-secondary-border);
}

.Modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 9999999;
    color: #000;
    opacity: 0;
    transition: 0.2s;
}
.modalContainer {
    display: grid;
    height: 100%;
    padding: 2rem 0;
}
.modalContent {
    width: 55%;
    min-width: 300px;
    background: #fff;
    padding: 2.5rem;
    border-radius: 1rem;
    position: relative;
    margin: auto;
    opacity: 0;
    transform: scale(0.8);
    transition: 0.2s;
}
.Modal.active {
    opacity: 1;
}
.Modal.active .modalContent {
    transform: scale(1);
    opacity: 1;
}
.Modal button.exit {
    position: absolute;
    top: 1.5rem;
    right: 1.5rem;
    font-size: 1.5rem;
    color: #666;
    background: 0;
}
@media screen and (max-width: 600px) {
    .modalContainer {
        width: 90%;
    }
}

.Loading {
    width: 100%;
    height: 100%;
    display: grid;
    place-items: center;
}
.Loading.mini {
    width: auto;
    height: auto;
    display: inline-grid;
    vertical-align: middle;
}
.Loading svg {
    margin: auto;
    background: transparent;
    display: block;
    shape-rendering: auto;
    width: 5rem;
    height: 5rem;
}
.Loading svg * {
    fill: var(--med-theme-color);
}
form label {
    font-size: 0.8rem;
    font-weight: normal;
    color: #666;
}
form input:not([type=submit]):not([type=checkbox]) {
    display: block;
    width: 100%;
    margin-top: 0.4rem;
    padding: 0.7rem;
    border: 1px solid var(--element-secondary-border);
    border-radius: 0.5rem;
    transition: 0.2s;
}
.deleteAccount {
    display: grid;
    grid-template: auto 1fr / 1fr auto;
    grid-template-areas:
        'header header'
        'text button';
    justify-content: space-between;
    column-gap: 1rem;
}
.deleteAccount h2 {
    grid-area: header;
}
.deleteAccount p {
    margin: 0;
    font-size: 0.9rem;
}
.deleteAccount .buttons {
    margin: 0;
}
/* .Account {
    display: flex;
    flex-wrap: wrap;
    margin-bottom: 0.5rem;
}
.Account > div {
    flex: 0 0 100%;
    margin-top: 1rem;
}
.Account > div.half {
    flex: 0 1 calc(50% - 0.5rem);
    margin-top: 0;
}
.Account > div.half + div.half {
    margin-left: 1rem;
}
.Account .toc {
    margin-top: 1.5rem;
} */
.Account {
    padding: 4rem 5rem 5rem 5rem;
    height: 100%;
    overflow: auto;
    display: flex;
    flex-direction: column;
    gap: 2rem;
}
.formComponent + .formComponent {
    margin-top: 1rem;
}
.formGrid {
    display: grid;
    grid-template-columns: repeat(auto-fill, calc(50% - 0.5rem));
    grid-gap: 1rem;
}

.Account .buttons {
    text-align: left;
}





.formSection {
    margin-top: 1.5rem;
    border-top: 1px solid var(--element-main-border);
    padding-top: 1.5rem;
    width: 100%;
    font-size: 0.8rem;
}
.formSection strong {
    font-size: 1rem;
    font-weight: 500;
    display: block;
    margin-bottom: 0.2rem;
}
.formSection .buttonDiv {
    flex: 1 0 100%;
    margin: 0;
}
/* .formGrid {
    display: grid;
    grid-template-columns: 1fr auto;
    align-items: center;
}
.formGrid .text {
    padding-right: 1.5rem;
}
.formGrid button {
    margin: 0;
    padding: 0.8rem 1rem;
} */
.changePassword {
    display: flex;
    width: 100%;
    margin-top: 0.5rem;
    flex-wrap: wrap;
}
.changePassword > div {
    flex: 1 0 auto;
    place-content: center;
}
.changePassword > div + div {
    margin-left: 1rem;
}
.changePassword button {
    margin-top: 1.5rem;
    padding: 1rem 2rem;
}
@media screen and (max-width: 900px) {
    .Account > div.half {
        flex: 0 1 100%;
    }
    .Account > div.half + div.half {
        margin-left: 0;
        margin-top: 1rem;
    }
    .formGrid {
        grid-gap: 1rem;
        grid-template-rows: 1fr auto;
        grid-template-columns: auto;
    }
    .changePassword {
        flex-direction: column;
        margin-top: 1rem;
    }
    .changePassword > div + div {
        margin: 0;
        margin-top: 1rem;
    }
}
form input:not([type=submit]):focus {
    border-color: var(--med-theme-color);
}
form .formCheck {
    margin-top: 0.5rem;
}
form .formCheck label {
    color: #000;
    font-weight: 300;
}
span.urlpreview {
    font-size: 0.8rem;
    display: block;
    margin-top: 0.3rem;
}
.Login {
    width: 100%;
    height: 80%;
    display: grid;
    place-items: center;
}
.Login > form {
    text-align: center;
}
.Login h1 {
    font-size: 5rem;
}
.Login .passwordProtected {
    display: inline-flex;
    place-items: center;
    margin-bottom: 1rem;
}
.Login .giantIcon {
    font-size: 1.5rem;
    color: #aaa;
    margin-right: 0.5rem;
}
.Login .passwordProtected p {
    margin: 0;
}
.Login form input[type=password] {
    width: 300px;
    max-width: 100%;
    margin: 0.4rem auto 0;
}
.hasStar, .Dashboard .Options button.hasStar {
    color: rgb(247, 189, 0);
}
form input.nope {
    animation-name: invalid-input;
    animation-duration: 0.5s;
    animation-timing-function: ease-in-out;
    animation-iteration-count: 1;
}
input + .formError {
    display: none;
}
input.nope + .formError {
    display: block;
    font-weight: 500;
    color: var(--caution);
    margin-top: 0.4rem;
    font-size: 0.75rem;
}
.formError::before {
    content: '\f071';
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    font-size: inherit;
    color: inherit;
    margin-right: 0.3rem;
}

.Hint {
    font-size: 0.9rem;
}
.Hint::before {
    font: 900 1rem 'Font Awesome 5 Free';
    margin-right: 0.3rem;
}
.Hint.qmark::before {
    content: '\f05a';
}
.Input .InputNote {
    font-size: 0.8rem;
    margin-top: 0.2rem;
}


/* CUSTOM CHECKBOX */
.Checkbox {
    position: relative;
    display: inline-grid;
    place-items: center;
    column-gap: 0.4rem;
    grid-template-columns: 1fr auto;
    grid-template-areas: 'label button';
}
.Checkbox.first {
    grid-template-columns: auto 1fr;
    grid-template-areas: 'button label';
}
.Checkbox label {
    grid-area: 'label';
    display: inline-block;
    vertical-align: middle;
    font-size: inherit;
    font-weight: inherit;
    color: inherit;
    margin: 0;
    margin-right: 0.5rem;
}
.checkboxElement {
    grid-area: 'label';
    position: relative;
    display: inline-block;
    vertical-align: middle;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 999px;
    cursor: pointer;
}
.checkboxElement span.svg {
    display: inline-block;
    vertical-align: middle;
    transform: translate3d(0,0,0) scale(1);
    position: relative;
    width: 100%;
    height: 100%;
    border-radius: 999px;
    border: 1px solid var(--element-main-border);
    background: var(--element-main-bg);
    transition: all 0.2s ease;
}
.checkboxElement span.svg::before {
    content: '';
    width: 1.5rem;
    height: 1.5rem;
    margin: -1px; /* to offset 1px border on span.svg */
    background: var(--deep-theme-color);
    display: block;
    transform: scale(0);
    opacity: 1;
    border-radius: 999px;
    transition-delay: 0.2s;
    transform-origin: center;
    cursor: default;
}
.checkboxElement span.svg svg {
    position: absolute;
    z-index: 1;
    top: 0.4375rem;
    left: 0.3125rem;
    width: auto;
    height: 0.5625rem;
    fill: none;
    stroke: #fff;
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-dasharray: 1rem;
    stroke-dashoffset: 1rem;
    transition: all 0.3s ease;
    transition-delay: 0.2s;
    transform: translate3d(0,0,0);
}
.Checkbox input[type=checkbox] {
    position: absolute;
    z-index: 9999;
    top: 0;
    left: 0;
    width: 1.5rem;
    height: 1.5rem;
    margin: 0;
    opacity: 0;
    user-select: none;
    cursor: pointer;
}
.Checkbox input[type=checkbox]:checked + span.svg {
    border: 1px solid var(--deep-theme-color);
    background: var(--deep-theme-color);
    animation: pulse 0.6s ease;
}
.Checkbox input[type=checkbox]:checked + span.svg svg {
    stroke-dashoffset: 0;
}
.Checkbox input[type=checkbox]:checked + span.svg::before {
    transform: scale(2.2);
    opacity: 0;
    transition: all 0.6s ease;
}
.checkboxElement:hover span.svg {
    border-color: var(--deep-theme-color);
}
.Login .Checkbox label {
    font-size: 0.9rem;
}